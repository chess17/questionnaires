{"version":3,"sources":["injector.js"],"names":["injector","deps","resolve","constructor","$","type","err","length","dependencies","slice","map","creator","storedConstructor","expose","key"],"mappings":"aAAA,IAAMA,SAAY,WAChB,IAAAC,KA2BC,OAGCC,QA5BF,SAAMD,EAANE,GAGE,GAA4B,aAAxBC,EAAEC,KAAKF,GADb,IACE,OAAIC,IAAEC,EACJ,MAAIC,GACT,OAAOH,MAEA,CAAA,GAAA,UAAOA,EAAAA,KAAAA,IAAP,aAAAC,EAAAC,KAAAF,EAAAA,EAAAI,OAAA,IAAA,CACD,IAAAC,EAAAL,EAAAM,MAAA,GAAA,GAAAC,IAAAR,GACIS,EAAWR,EAAPA,EAAAI,OAAqCF,GAC9C,OAAMG,EAAAA,MAAeL,EAAAA,GACfQ,GAAsBR,WAAtBQ,EAAAA,KAAUR,GAMf,OAAAA,EALD,IAAAS,EAAqBD,EAASH,GAHzB,GAAAI,EAKL,OAAMA,EAAAA,KAaVC,OANC,SAAAC,EAAAX,GAGCF,EAAKa,GAAOX,IA3BE,GAAlBD,QAAAF,SAAAE,QAqCMW,OAASb,SAASa","file":"injector.js","sourcesContent":["const injector = (function() {\n  'use strict';\n\n  const deps = {};\n\n  function resolve(constructor) {\n    if ($.type(constructor) === \"function\") {\n      try {\n\treturn new constructor();\n      } catch (err) {\n        return constructor;\n      }\n    } else if ($.type(constructor) === \"array\" && $.type(constructor[constructor.length - 1]) === \"function\") {\n      const dependencies = constructor.slice(0, -1).map(resolve);\n      const creator = constructor[constructor.length - 1];\n      return creator.apply(creator, dependencies);\n    } else if ($.type(constructor) === \"string\") {\n      const storedConstructor = deps[constructor];\n      if (storedConstructor) {\n        return resolve(storedConstructor);\n      }\n    } else {\n      return constructor;\n    }\n  }\n\n  function expose(key, constructor) {\n    deps[key] = constructor;\n  }\n\n  return {\n    resolve: resolve,\n    expose: expose\n  };\n})();\n\nconst resolve = injector.resolve;\nconst expose = injector.expose;\n"]}